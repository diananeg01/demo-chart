name: Test project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DB_NAME: mysql

jobs:
  info:
    environment: test
    env:
      INFO_NAME: env_name_test
      DB_USER: ${{ secrets.DB_USER }} # now it will use the secrets defined in the environment secrets, not the ones defined in secrets
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }} 
    runs-on: ubuntu-latest
    steps:
      - name: Output job-specific and global env for test purpose
        run: |
          echo "INFO_NAME: ${{ env.INFO_NAME }}"
          echo "DB_NAME: $DB_NAME"
          echo "DB_USER: ${{ env.DB_USER }}"
          echo "DB_PASSWORD: ${{ env.DB_PASSWORD }}"
      - name: Output Github context
        run: echo "${{ toJSON(github) }}" 
  
  build:
    runs-on: ubuntu-latest
    outputs:
      style-file: ${{ steps.publishCSS.outputs.style-file }}

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load & cache dependencies
      id: cache-deps
      uses: ./.github/actions/cached-deps
      with:
        caching: 'false'

    - name: Output info
      run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}

    - name: Build
      run: npm run build

    - name: Publish CSS filename
      id: publishCSS
      run: find build/static/css/*.css -type f -execdir echo '::set-output name=style-file::{}' ';'
      

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files-${{ matrix.node-version }}
        path: build
        # path: |
        #   dist
        #   package.json

  test:
    needs: build # if this misses, the jobs will run in parallel, not sequentially
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load & cache dependencies
      uses: ./.github/actions/cached-deps
      
    - name: Test
      run: npm test

  deploy:
    needs: test
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files-${{ matrix.node-version }}

      - name: Output contents
        run: ls

      - name: Outpus CSS filename from dist
        run: echo "${{ needs.build.outputs.style-file }}"

      - name: Deploy
        run: echo "Deployed!"

  report:
    needs: [info, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output info failure
        run: |
          echo "Smth went wrong"
          echo "${{ github }}"
