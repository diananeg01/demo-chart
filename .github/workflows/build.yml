name: Test project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: Output Github context
        run: echo "${{ toJSON(github) }}" 
  
  build:
    runs-on: ubuntu-latest
    outputs:
      style-file: ${{ steps.publishCSS.outputs.style-file }}

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Publish CSS filename
      id: publishCSS
      run: find build/static/css/*.css -type f -execdir echo '::set-output name=style-file::{}' ';'
      

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files-${{ matrix.node-version }}
        path: build
        # path: |
        #   dist
        #   package.json

  test:
    needs: build # if this misses, the jobs will run in parallel, not sequentially
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Test
      run: npm test

  deploy:
    needs: test
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files-${{ matrix.node-version }}

      - name: Output contents
        run: ls

      - name: Outpus CSS filename from dist
        run: echo "${{ needs.build.outputs.style-file }}"

      - name: Deploy
        run: echo "Deployed!"
