name: Use reusable workflow

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      style-file: ${{ steps.publishCSS.outputs.style-file }}

    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build

    - name: Publish CSS filename
      id: publishCSS
      run: find build/static/css/*.css -type f -execdir echo '::set-output name=style-file::{}' ';'
      

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: build
        # path: |
        #   dist
        #   package.json

  test:
    needs: build # if this misses, the jobs will run in parallel, not sequentially
    
    runs-on: ubuntu-latest

    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Test
      run: npm test

  deploy:
    needs: test
    uses: ./.github/workflows/reusable.yml
    with:
      artifact-name: dist-files
    secrets:
      some-secret: secret

  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.deploy.outputs.result }}"
